[giggle]
	main-window-maximized = false
	main-window-geometry = 1678x997+0+24
	main-window-view = HistoryView
	history-view-vpane-position = 752
	file-view-vpane-position = 916
[user]
	name = modulitos
    # email = you@example.com
	email = modulitos@users.noreply.github.com
[core]
	editor = vim
	excludesfile = /home/lucas/.gitignore_global
  pager = delta

[interactive]
    diffFilter = delta --color-only

[delta]
    navigate = true  # use n and N to move between diff sections

[merge]
    conflictstyle = diff3

[push]
  default = simple
  # "push the current branch back to the branch whose changes are usually integrated into the current branch"
  # "refuse to push if the upstream branch’s name is different from the local one"
  # https://git-scm.com/docs/git-config#git-config-pushdefault

  followTags = true
  # Because I get sick of telling git to do it manually
  # https://git-scm.com/docs/git-config#git-config-pushfollowTags
[alias]
  # start = !git init && git commit --allow-empty -m "Initial commit"
  # commit-empty = commit --allow-empty -m "Initial commit"
  commit-empty = !sh -c 'git commit --allow-empty -m "!"'
  set-modulitos = !git config user.name modulitos && git config user.email modulitos@users.noreply.github.com
  set-modulitos-official = !git config user.name modulitos && git config user.email hi@modulitos.com
  set-gh-email = !git config user.email modulitos@users.noreply.github.com
  set-jalmogo = !git config user.name jalmogo && git config user.email jalmogo@users.noreply.github.com
  st = status --short --branch
  cm = commit
  c = checkout
  shortstat = diff master --shortstat
  prune = fetch --prune
  undo = reset --soft HEAD^
  please = push --force-with-lease
  outgoing = !git fetch && git log --pretty=oneline --abbrev-commit @{u}..
  incoming = !git fetch && git log --pretty=oneline --abbrev-commit ..@{u}
  commend = commit --amend --no-edit
  it = !git init && git commit -m “root” --allow-empty
  stsh = stash --keep-index
  staash = stash --include-untracked
  staaash = stash --all
  grog = log --graph --abbrev-commit --decorate --all --format=format:\"%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(dim white) - %an%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n %C(white)%s%C(reset)\"
  recent-branches = for-each-ref --sort='-authordate:iso8601' --format=' %(authordate:relative)%09%(refname:short)' refs/heads
  # this alias isn't quite working, but works when run manually
  prune-branches = !git branch -r | awk '{print $1}' | egrep -v -f /dev/fd/0 <(git branch -vv | grep origin) | awk '{print $1}' | xargs git branch -d
  # dsf = "!f() { [ \"$GIT_PREFIX\" != \"\" ] && cd "$GIT_PREFIX"; git diff --color $@ | diff-so-fancy | less --tabs=4 -RFX; }; f"
[push]
	default = simple
[credential]
	helper = cache
[diff]
  compactionHueristic = true
  colorMoved = default
[pull]
  rebase = false
# forcibly override ssh for https, in special cases:
# [url "git@gitlab.com:"]
# insteadOf = https://gitlab.com/
[init]
	defaultBranch = main
