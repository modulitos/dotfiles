#!/usr/bin/env bash
# #!/usr/usr/bin/env bash

source "utils.sh"

# This can include fractions of a minute:
MINUTES=$1
MESSAGE=$2

FLOAT_SECONDS=$(echo "$MINUTES" 60 | awk '{printf "%4.3f\n",$1*$2}')
# INT_SECONDS=$(printf "%.${1:-0}f" "$FLOAT_SECONDS")
INT_SECONDS=$(printf "%.0f\n" "$FLOAT_SECONDS")

countdown "$INT_SECONDS" "$MESSAGE"

printf "%s\n" "$MESSAGE"

# python version:
# #!/usr/bin/env python3
# from timer import timer
# import sys


# # bash version:
# # #!/usr/bin/env bash
# # minutes=$1
# # message=$2
# # countdown() {
# #   date1=$((`date +%s` + $1));
# #   while [ "$date1" -ne `date +%s`  ]; do
# #     echo -ne "$(date -u --date @$(($date1 - `date +%s`)) +%H:%M:%S)\r";
# #     sleep 0.1
# #   done
# #   # if linux:
# #   # notify-send "Time is up!" "$message"
# #   # play ~/sounds/bell-ringing-04.wav

# #   # if macos
# #   osascript -e 'display notification "test2" with title "test"'
# #   afplay ~/sounds/bell-ringing-04.wav
# # }
# # echo "minutes: $minutes"
# # seconds=$((($minutes)*60))
# # echo "seconds: $seconds"
# # countdown $seconds
# # echo "$message"

# if __name__ == "__main__":
#     seconds = int(sys.argv[1])
#     message = sys.argv[2] if len(sys.argv) > 2 else None
#     timer(seconds * 60, message)
